{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 252, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/hiros/OneDrive%20-%20%E6%88%90%E7%94%B0%E5%BC%98/Tech0/VS%20Code/G_calendar_app/Calendar_APP/src/app/api/authenticateUser/route.ts"],"sourcesContent":["import { google } from \"googleapis\";\r\nimport { NextResponse } from \"next/server\"; // ✅ NextResponse をインポート\r\n\r\n// ✅ 環境変数を取得\r\nconst SHEET_ID = process.env.SHEET_ID;\r\nconst GOOGLE_PROJECT_ID = process.env.GOOGLE_PROJECT_ID;\r\nconst GOOGLE_PRIVATE_KEY = process.env.GOOGLE_PRIVATE_KEY?.replace(/\\\\n/g, \"\\n\"); // 改行コード修正\r\nconst GOOGLE_CLIENT_EMAIL = process.env.GOOGLE_CLIENT_EMAIL;\r\n\r\nconsole.log(\"✅ SHEET_ID:\", SHEET_ID);\r\n\r\nexport async function POST(req: Request) {\r\n    // ✅ 環境変数がセットされているか確認\r\n    if (!SHEET_ID || !GOOGLE_PROJECT_ID || !GOOGLE_PRIVATE_KEY || !GOOGLE_CLIENT_EMAIL) {\r\n        console.error(\"❌ 環境変数が不足しています\");\r\n        return NextResponse.json({ error: \"環境変数が不足しています\" }, { status: 500 });\r\n    }\r\n\r\n    let requestBody;\r\n    try {\r\n        requestBody = await req.json();\r\n    } catch (error) {\r\n        return NextResponse.json({ error: \"Invalid JSON format\" }, { status: 400 });\r\n    }\r\n\r\n    const { email, password } = requestBody;\r\n\r\n    try {\r\n        // ✅ Google 認証の設定（`.env.local` から取得）\r\n        const auth = new google.auth.GoogleAuth({\r\n            credentials: {\r\n                type: \"service_account\",\r\n                project_id: GOOGLE_PROJECT_ID,\r\n                private_key: GOOGLE_PRIVATE_KEY,\r\n                client_email: GOOGLE_CLIENT_EMAIL,\r\n            },\r\n            scopes: [\"https://www.googleapis.com/auth/spreadsheets.readonly\"],\r\n        });\r\n\r\n        const sheets = google.sheets({ version: \"v4\", auth });\r\n\r\n        // ✅ Google Sheets からデータ取得\r\n        const response = await sheets.spreadsheets.values.get({\r\n            spreadsheetId: SHEET_ID,\r\n            range: \"Users!A:C\",\r\n        });\r\n\r\n        if (!response.data || !response.data.values) {\r\n            console.error(\"❌ スプレッドシートのデータが取得できません\");\r\n            return NextResponse.json({ error: \"Spreadsheet data is empty\" }, { status: 500 });\r\n        }\r\n\r\n        const rows = response.data.values || [];\r\n        const user = rows.find((row) => row[1] === email && row[2] === password);\r\n\r\n        if (user) {\r\n            return NextResponse.json({ userId: user[0] });\r\n        } else {\r\n            return NextResponse.json({ error: \"Invalid credentials\" }, { status: 401 });\r\n        }\r\n    } catch (error) {\r\n        console.error(\"❌ APIエラー:\", error);\r\n        return NextResponse.json({ error: \"Internal Server Error\" }, { status: 500 });\r\n    }\r\n}\r\n"],"names":[],"mappings":";;;AAAA;AACA,kOAA4C,wBAAwB;;;AAEpE,YAAY;AACZ,MAAM,WAAW,QAAQ,GAAG,CAAC,QAAQ;AACrC,MAAM,oBAAoB,QAAQ,GAAG,CAAC,iBAAiB;AACvD,MAAM,qBAAqB,QAAQ,GAAG,CAAC,kBAAkB,EAAE,QAAQ,QAAQ,OAAO,UAAU;AAC5F,MAAM,sBAAsB,QAAQ,GAAG,CAAC,mBAAmB;AAE3D,QAAQ,GAAG,CAAC,eAAe;AAEpB,eAAe,KAAK,GAAY;IACnC,qBAAqB;IACrB,IAAI,CAAC,YAAY,CAAC,qBAAqB,CAAC,sBAAsB,CAAC,qBAAqB;QAChF,QAAQ,KAAK,CAAC;QACd,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAAe,GAAG;YAAE,QAAQ;QAAI;IACtE;IAEA,IAAI;IACJ,IAAI;QACA,cAAc,MAAM,IAAI,IAAI;IAChC,EAAE,OAAO,OAAO;QACZ,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAAsB,GAAG;YAAE,QAAQ;QAAI;IAC7E;IAEA,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,GAAG;IAE5B,IAAI;QACA,oCAAoC;QACpC,MAAM,OAAO,IAAI,qJAAA,CAAA,SAAM,CAAC,IAAI,CAAC,UAAU,CAAC;YACpC,aAAa;gBACT,MAAM;gBACN,YAAY;gBACZ,aAAa;gBACb,cAAc;YAClB;YACA,QAAQ;gBAAC;aAAwD;QACrE;QAEA,MAAM,SAAS,qJAAA,CAAA,SAAM,CAAC,MAAM,CAAC;YAAE,SAAS;YAAM;QAAK;QAEnD,0BAA0B;QAC1B,MAAM,WAAW,MAAM,OAAO,YAAY,CAAC,MAAM,CAAC,GAAG,CAAC;YAClD,eAAe;YACf,OAAO;QACX;QAEA,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,SAAS,IAAI,CAAC,MAAM,EAAE;YACzC,QAAQ,KAAK,CAAC;YACd,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAA4B,GAAG;gBAAE,QAAQ;YAAI;QACnF;QAEA,MAAM,OAAO,SAAS,IAAI,CAAC,MAAM,IAAI,EAAE;QACvC,MAAM,OAAO,KAAK,IAAI,CAAC,CAAC,MAAQ,GAAG,CAAC,EAAE,KAAK,SAAS,GAAG,CAAC,EAAE,KAAK;QAE/D,IAAI,MAAM;YACN,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,QAAQ,IAAI,CAAC,EAAE;YAAC;QAC/C,OAAO;YACH,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAAsB,GAAG;gBAAE,QAAQ;YAAI;QAC7E;IACJ,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC,aAAa;QAC3B,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAAwB,GAAG;YAAE,QAAQ;QAAI;IAC/E;AACJ","debugId":null}},
    {"offset": {"line": 338, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}